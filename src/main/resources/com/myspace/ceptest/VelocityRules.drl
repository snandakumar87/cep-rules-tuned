package com.myspace.ceptest;



import fraud.analysis.demo.transaction.*;
rule "Velocity Rule 1"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'IN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 2)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 1 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 2"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'CN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 2)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 2 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 3"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'SG') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 4)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 3 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 4"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'IN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 4)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 4 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 5"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'CN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 4)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 5 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 6"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'SG') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 6)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 6 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 7"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'IN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 6)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 7 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 8"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'CN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 6)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 8 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 9"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'SG') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 8)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 9 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 10"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'IN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 8)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 10 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 11"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'CN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 8)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 11 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 12"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'SG') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 10)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 12 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 13"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'IN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 10)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 13 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 14"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'CN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 10)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 14 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 15"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'SG') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 12)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 15 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 16"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'IN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 12)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 16 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 17"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'CN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 12)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 17 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 18"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'SG') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 2)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 18 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 19"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'IN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 2)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 19 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 20"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'CN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 2)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 20 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 21"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'SG') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 4)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 21 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 22"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'IN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 4)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 22 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 23"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'CN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 4)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 23 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 24"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'SG') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 6)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 24 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 25"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'IN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 6)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 25 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 26"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'CN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 6)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 26 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 27"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'SG') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 8)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 27 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 28"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'IN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 8)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 28 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 29"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'CN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 8)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 29 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 30"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'SG') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 10)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 30 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 31"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'IN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 10)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 31 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 32"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'CN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 10)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 32 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 33"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'SG') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 12)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 33 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 34"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'IN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 12)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 34 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 35"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'CN') over window:time (1415m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 12)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 35 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 36"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'IN') over window:time (2830m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 2)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 36 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 37"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'CN') over window:time (2830m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 2)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 37 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 38"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'SG') over window:time (2830m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 4)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 38 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 39"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'IN') over window:time (2830m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 4)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 39 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 40"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'CN') over window:time (2830m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 4)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 40 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 41"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'SG') over window:time (2830m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 6)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 41 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 42"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'IN') over window:time (2830m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 6)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 42 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 43"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'CN') over window:time (2830m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 6)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 43 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 44"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'SG') over window:time (2830m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 8)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 44 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 45"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'IN') over window:time (2830m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 8)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 45 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 46"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'CN') over window:time (2830m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 8)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 46 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 47"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'SG') over window:time (2830m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 10)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 47 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 48"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'IN') over window:time (2830m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 10)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 48 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 49"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'CN') over window:time (2830m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 10)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 49 for ' + curr.getCardNumber());
  insert(cepFraud);
end
rule "Velocity Rule 50"
when
  curr: CurrentTxn(null != cardNumber)
  accumulate ($cct: Transaction(this.cardNumber == curr.cardNumber, txnCntry != 'SG') over window:time (2830m) from entry-point Reference;
    $nrOfTransactions : count($cct);
    $nrOfTransactions >= 12)

then
  CEPFraud cepFraud = new CEPFraud();
  cepFraud.setTransactionId(curr.getTransactionId());
  cepFraud.setFraudReason('Flagged tx based on velocity rule 50 for ' + curr.getCardNumber());
  insert(cepFraud);
end

